name: Localize CI

on:
  push:
    branches:
      - main
      - 'stable/**'

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: pre-commit/action@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test-sqlite:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', '3.11']
        django: ['3.2']
        wagtail: ['2.15', '2.16', '3.0', '4.0', '4.1', '4.2']
        include:
          - python: '3.10'
            django: '4.1'
            wagtail: '4.0'
            experimental: false
          - python: '3.10'
            django: '4.1'
            wagtail: '4.1'
            experimental: false
          - python: '3.11'
            django: '4.1'
            wagtail: '4.2'
            experimental: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install tox
      - name: Cache tox environments
        id: cache-tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ hashFiles('pyproject.toml') }}-py${{ matrix.python }}-dj${{ matrix.django }}-w${{ matrix.wagtail }}-sqlite
      - name: Test
        run: |
          tox
        env:
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-sqlite

  test-postgres:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    needs: lint
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
        django: ['3.2']
        wagtail: ['2.15', '2.16', '3.0', '4.0', '4.1', '4.2']
        experimental: [false]
        include:
          - python: '3.9'
            django: '4.0'
            wagtail: '2.16'
            experimental: false
          - python: '3.9'
            django: '4.0'
            wagtail: '3.0'
            experimental: false
          - python: '3.9'
            django: '4.0'
            wagtail: '4.0'
            experimental: false
          - python: '3.9'
            django: '4.1'
            wagtail: '4.0'
            experimental: false
          - python: '3.10'
            django: '4.1'
            wagtail: '4.0'
            experimental: false
          - python: '3.10'
            django: '4.1'
            wagtail: '4.1'
            experimental: false
          - python: '3.10'
            django: '4.1'
            wagtail: '4.2'
            experimental: false
    services:
      postgres:
        image: ${{ matrix.postgres || 'postgres:11' }}
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install tox
      - name: Cache tox environments
        id: cache-tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ hashFiles('pyproject.toml') }}-py${{ matrix.python }}-dj${{ matrix.django }}-w${{ matrix.wagtail }}-postgres
      - name: Test
        run: |
          tox
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/wagtail_localize
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-postgres

  coverage:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ['3.8']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install flit
          flit install --deps production --extras testing
          pip install coverage==5.4
      - name: Test
        run: |
          coverage run testmanage.py test
      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

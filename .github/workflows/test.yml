name: Localize CI

on:
  push:
    branches:
      - main
      - master
      - 'stable/**'

  pull_request:

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9']
        django: ['2.2', '3.0', '3.1']
        wagtail: ['2.11']
        include:
          # Add test for Django 3.2 that is only suported on Wagtail 2.13+
          - python: '3.9'
            django: '3.2'
            wagtail: '2.13'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install tox
      - name: Test
        run: |
          tox
        env:
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-sqlite

  test-postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9']
        django: ['2.2', '3.0', '3.1']
        wagtail: ['2.11', '2.12', '2.13']
        postgres: ['10.8']
        include:
          # Add test for Django 3.2 that is only suported on Wagtail 2.13+
          - python: '3.9'
            django: '3.2'
            wagtail: '2.13'
            postgres: '10.8'
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install tox
      - name: Test
        run: |
          tox
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/wagtail_localize
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-postgres

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.8']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install -e.[testing]
          pip install coverage==5.4
      - name: Test
        run: |
          coverage run testmanage.py test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
